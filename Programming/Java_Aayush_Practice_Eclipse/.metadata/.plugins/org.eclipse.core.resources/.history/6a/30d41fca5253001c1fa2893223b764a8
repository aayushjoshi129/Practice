package new11;

public class MainClass{
	
	public static void main(String[] args) {
		
		// TODO Auto-generated method stub
		
		
		Person p1 = new Person();
		p1.name = "Honey";
		p1.age = 24;
		
		System.out.println(p1.name + " " + p1.age);
		
		p1.Walk();
		p1.Eat();
		
		
		Person p2 = new Person();
		p2.name = "Diljit";
		p2.age = 23;
		p2.a = 21;
		p2.b = 8;
		p2.d = 47;
		
		System.out.println(p2.name + " " + p2.age);
		System.out.println(Person.d);		// Using Static Keyword using class variable to directly print from a class (no need to create an object)
		
		p2.Walk();
		p2.Eat();
		p2.Walk(10);
		
		
		System.out.println(p2.add());
		System.out.println(p2.mult());
		System.out.println(p2.subt());
		System.out.println(p2.div());
		System.out.println(p2.mod());
		
		Person p3 = new Person("Gippy",28);
		System.out.println("Hi I am "+p3.name+" and my age is "+p3.age);
		
	}
}
	class Person {
		String name;
		int age , a,b;
		static int d;
		
		public Person() {
			System.out.println("You Called me");
		}
		
		public Person(String NewName,int NewAge) {
//			this();										// this() calls its same constructor means here it is calling Person()			
			name = NewName;
			age = NewAge;
		}
		
		void Walk() {
			System.out.println(name+" can Walk");
		}
		
		
		// POLYMORPHISM USING WALK FUNCTION (same method can executed in N ways)
		
		void Walk(int steps) {
			System.out.println(name+" Walked "+steps+" steps");
		}
		
		void Eat() {
			System.out.println(name+" can Eat");
		}
		
		int add() {
			return a+b;
		}
		
		int mult() {
			return a*b;
		}
		
		int div() {
			return a/b;
		}
		
		int subt() {
			return a-b;
		}
		
		int mod() {
			return a%b;
		}
		
	}
	
	
	// Constructors = are used to create new objects
	
	// Static Keyword means it is an class property not an object property (use it when you don't need to change the variable with reference to objects)
